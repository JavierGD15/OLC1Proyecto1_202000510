/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package usac.gob.gt.py1_202000510;

import usac.gob.gt.py1_202000510.Analizadores.Lexico;
import usac.gob.gt.py1_202000510.Estructuras.AFD;
import usac.gob.gt.py1_202000510.Estructuras.Errores;
import usac.gob.gt.py1_202000510.Estructuras.Validation;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import com.google.gson.Gson;
import java.awt.HeadlessException;

/**
 *
 * @author javie
 */
public class main extends javax.swing.JFrame {

    static String path = "";
    static String name = "";
    static List<Errores> errors = new ArrayList<>();
    static String direccion = "";
    static int actual = 0;
    static Map<String, AFD> arboles = new HashMap<>();
    static String contenido = "";
    static FileNameExtensionFilter filtro = new FileNameExtensionFilter(" Archivo .ss", "ss", "txt", "Ss", "sS", "SS");
    JFileChooser file = new JFileChooser();
    static File archivo;
    static FileInputStream entrada;
    static FileOutputStream salida;

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
        this.setLocationRelativeTo(null);
        SeleccionarIMG("", "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Editor = new javax.swing.JTextArea();
        file_name = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        exp = new javax.swing.JComboBox<>();
        IMG = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        tipo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextArea();
        error_text = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        file_name1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        Editor.setColumns(20);
        Editor.setRows(5);
        jScrollPane1.setViewportView(Editor);

        file_name.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        file_name.setText("Editor");

        jButton1.setText("Generar automatas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Analizar entradas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        exp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expActionPerformed(evt);
            }
        });

        IMG.setBackground(new java.awt.Color(0, 0, 0));
        IMG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IMG.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        IMG.setMaximumSize(new java.awt.Dimension(337, 337));
        IMG.setMinimumSize(new java.awt.Dimension(337, 337));
        IMG.setOpaque(true);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Nombre Expresion");

        jButton3.setText("anterior");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Abrir Imagen");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("siguiente");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Transiciones", "AFD", "AFND" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Tipo Grafico");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(file_name)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IMG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(122, 122, 122)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(file_name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(8, 8, 8)
                        .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IMG, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );

        jPanel2.setForeground(new java.awt.Color(204, 204, 204));

        consola.setEditable(false);
        consola.setColumns(20);
        consola.setRows(5);
        jScrollPane2.setViewportView(consola);

        error_text.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        error_text.setText("Numero de errores: 0");

        jButton6.setText("Ver errores");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Abrir Json");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Limpiar consola");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        file_name1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        file_name1.setText("Salida");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(file_name1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(201, 201, 201)
                        .addComponent(error_text)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(100, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(file_name1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(error_text)
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setText("Archivo");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Guardar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        jMenuItem3.setText("Guardar Como");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Nuevo archivo");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void SeleccionarIMG(String name, String tipo) {
        if (!tipo.isEmpty() && !name.isEmpty()) {
            switch (tipo) {
                //case "Arbol":
                //direccion = "./ARBOL_202000510/" + name + ".jpg";
                //break;
//                case "Siguientes":
//                    direccion = "./SIGUIENTES_202000510/" + name + ".jpg";
//                    break;
                case "Transiciones":
                    direccion = "./TRANSICIONES_202000510/" + name + ".jpg";
                    break;
                case "AFD":
                    direccion = "./AFD_202000510/" + name + ".jpg";
                    break;
                case "AFND":
                    direccion = "./AFND_202000510/" + name + ".jpg";
                    break;
            }
            try {

                ImageIcon imagen1 = new ImageIcon(direccion);
                float relacionW = 1;
                float relacionH = 1;
                if (imagen1.getIconHeight() < imagen1.getIconWidth()) {
                    relacionH = ((float) imagen1.getIconHeight() / imagen1.getIconWidth());
                } else {
                    relacionW = (float) imagen1.getIconWidth() / imagen1.getIconHeight();
                }
                Icon fondo1 = new ImageIcon(imagen1.getImage().getScaledInstance((int) ((float) IMG.getWidth() * relacionW), (int) ((float) IMG.getHeight() * relacionH), 100));
                IMG.setIcon(fondo1);
            } catch (Exception e) {
            }
        }
    }

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            file.setFileFilter(filtro);
            int option = file.showSaveDialog(this);
            if (option == JFileChooser.APPROVE_OPTION) {
                name = file.getSelectedFile().getName();
                path = file.getSelectedFile().toString();
                if (!name.endsWith("olc")) {
                    archivo = new File(file.getSelectedFile().getAbsolutePath() + ".ss");
                } else {
                    archivo = new File(file.getSelectedFile().getAbsolutePath());
                }
                file_name.setText("File name: " + name);
                jMenuItem2ActionPerformed(evt);
            }
        } catch (HeadlessException e) {
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            if (!name.isEmpty()) {
                salida = new FileOutputStream(archivo);
                contenido = Editor.getText();
                byte[] bytxt = Editor.getText().getBytes();
                salida.write(bytxt);
            } else {
                jMenuItem3ActionPerformed(evt);
            }
        } catch (IOException e) {
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if (contenido.equals(Editor.getText())) {
            name = "";
            path = "";
            archivo = null;
            Editor.setText("");
            contenido = "";
            exp.removeAllItems();
            file_name.setText("File name: Nuevo arhivo.ss");
            jButton7.setEnabled(false);
            IMG.setIcon(null);
        } else {
            int op = JOptionPane.showConfirmDialog(this, "¿Guardar antes de continuar?");
            if (op == 0) {
                jMenuItem2ActionPerformed(evt);
            } else if (op == 1) {
                name = "";
                path = "";
                Editor.setText("");
                contenido = "";
                exp.removeAllItems();
                archivo = null;
                IMG.setIcon(null);
                file_name.setText("File name: Nuevo arhivo.ss");
                jButton7.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (exp.getItemCount() > 0) {
            if (actual == 0) {
                actual = exp.getItemCount() - 1;
                exp.setSelectedIndex(actual);
            } else {
                actual--;
                exp.setSelectedIndex(actual);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        usac.gob.gt.py1_202000510.Analizadores.Sintactico pars;
        exp.removeAllItems();
        try {
            errors.clear();
            String originalText = Editor.getText(); 
            String modifiedText = originalText.replace('(', '{').replace(')', '}');
            Lexico lexical = new usac.gob.gt.py1_202000510.Analizadores.Lexico(new StringReader(modifiedText));
            pars = new usac.gob.gt.py1_202000510.Analizadores.Sintactico(lexical);
            pars.cont = lexical.cont;
            pars.parse();
            arboles = pars.LIST_AFD;
            errors.addAll(lexical.Errors);
            errors.addAll(pars.Errors);
            error_text.setText("Numero de errores: " + errors.size());
            for (AFD arbol : arboles.values()) {
                arbol.GraficarTodo();
                exp.addItem(arbol.nombre);
            }
            exp.setSelectedIndex(0);
            try {
                Thread.sleep(300);
            } catch (InterruptedException e) {
                System.out.println("Thread Interrupted");
            }
            SeleccionarIMG((String) exp.getSelectedItem(), (String) tipo.getSelectedItem());
        } catch (Exception ex) {
            System.out.println("Error fatal en compilación de entrada.");
            System.out.println("Causa: " + ex.getCause());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        SeleccionarIMG(exp.getSelectedItem().toString(), tipo.getSelectedItem().toString());
    }//GEN-LAST:event_tipoActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe", "/c", System.getProperty("user.dir") + direccion.substring(1, direccion.length()));
            p.start();
        } catch (IOException e) {
        }
        try {
            ProcessBuilder p = new ProcessBuilder();
            p.command("sh", "-c", "open " + direccion);
            p.start();
        } catch (IOException e) {
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void expActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expActionPerformed
        try {
            SeleccionarIMG(exp.getSelectedItem().toString(), tipo.getSelectedItem().toString());
            actual = exp.getSelectedIndex();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_expActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (exp.getItemCount() > 0) {
            if (actual == exp.getItemCount() - 1) {
                actual = 0;
                exp.setSelectedIndex(actual);
            } else {
                actual++;
                exp.setSelectedIndex(actual);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        usac.gob.gt.py1_202000510.Analizadores.Sintactico pars;
        try {
            File directorio = new File("./SALIDAS_202000510");
            if (!directorio.exists()) {
                directorio.mkdirs();
            }
            errors.clear();
            String originalText = Editor.getText(); 
            String modifiedText = originalText.replace('(', '{').replace(')', '}');
            Lexico lexical = new usac.gob.gt.py1_202000510.Analizadores.Lexico(new StringReader(modifiedText));
            pars = new usac.gob.gt.py1_202000510.Analizadores.Sintactico(lexical);
            pars.cont = lexical.cont;
            pars.parse();
            arboles = pars.LIST_AFD;
            errors.addAll(lexical.Errors);
            errors.addAll(pars.Errors);
            error_text.setText("Numero de errores: " + errors.size());
            List<String[]> comprobaciones = pars.Validacion;
            FileWriter fichero;
            PrintWriter escritor;
            Gson g = new Gson();
            fichero = new FileWriter("./SALIDAS_202000510/" + name + ".json");
            escritor = new PrintWriter(fichero);
            escritor.print("[\n");
            int cont = 0;
            for (String[] x : comprobaciones) {
                if (arboles.get(x[0]) != null) {

                    if (arboles.get(x[0]).ValidarCadena(x[1])) {
                        Validation val = new Validation(x[1], x[0], "Cadena Válida");
                        if (cont < comprobaciones.size() - 1) {
                            escritor.print(g.toJson(val) + ",\n");
                        } else {
                            escritor.print(g.toJson(val) + "\n");
                        }
                        consola.setText(consola.getText() + "\n");
                        consola.setText(consola.getText() + "La expresión: \"" + x[1] + "\" es válida con la expresión Regular " + x[0]);
                    } else {
                        consola.setText(consola.getText() + "\n");
                        consola.setText(consola.getText() + "La expresión: \"" + x[1] + "\" es inválida con la expresión Regular " + x[0]);
                    }

                } else {
                    System.out.println("No existe el automata");
                }
                cont++;
            }
            escritor.print("]\n");

            fichero.close();
            jButton7.setEnabled(true);
        } catch (Exception ex) {
            System.out.println("Error fatal en compilación de entrada.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe", "/c", System.getProperty("user.dir") + "/SALIDAS_202000510/" + name + ".json");
            p.start();
        } catch (IOException e) {
        }
        try {
            ProcessBuilder p = new ProcessBuilder();
            p.command("sh", "-c", "open " + "/SALIDAS_202000510/" + name + ".json");
            p.start();
        } catch (IOException e) {
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        Editor.setText(null);
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        File directorio = new File("./ERRORES_202000510");
        if (!directorio.exists()) {
            directorio.mkdirs();
        }
        FileWriter fichero;
        PrintWriter escritor;
        try {
            fichero = new FileWriter("./ERRORES_202000510/" + name + ".dot");
            escritor = new PrintWriter(fichero);
            escritor.print("digraph grafica{\n"
                    + "rankdir=TB;\n"
                    + "forcelabels= true;\n"
                    + "node [shape = plain];\n");
            String td = "";
            for (Errores dato : errors) {
                td += "<tr>\n"
                        + "<td>" + dato.numero + "</td>\n"
                        + "<td>" + dato.tipo + "</td>\n"
                        + "<td>" + dato.descripcion + "</td>\n"
                        + "<td>" + dato.linea + "</td>\n"
                        + "<td>" + dato.colummna + "</td>\n"
                        + "</tr>\n";
            }
            String tabla = "<<table border = '1' cellboder = '1' cellspacing='0' cellpadding='10'>\n"
                    + "<tr>\n"
                    + "<td COLSPAN = '5'>TABLA DE ERRORES</td>\n"
                    + "</tr>\n"
                    + "<tr>\n"
                    + "<td>#</td>\n"
                    + "<td>Tipo</td>\n"
                    + "<td>Descripcion</td>\n"
                    + "<td>Linea</td>\n"
                    + "<td>Columna</td>\n"
                    + "</tr>\n"
                    + td
                    + "</table>>";
            String text = "TABLA [label = " + tabla + "];\n";
            escritor.print(text);
            escritor.print("\n}");
            fichero.close();
            Runtime rt = Runtime.getRuntime();
            rt.exec("dot -Tsvg -o ./ERRORES_202000510/" + name + ".svg graf ./ERRORES_202000510/" + name + ".dot");
            ProcessBuilder p = new ProcessBuilder();
            p.command("cmd.exe", "/c", System.getProperty("user.dir") + "/ERRORES_202000510/" + name + ".svg");
            p.start();
        } catch (IOException e) {
            System.out.println("error al crear la grafica");
        }

        try {
            ProcessBuilder p = new ProcessBuilder();
            p.command("sh", "-c", "open " + "/ERRORES_202000510/" + name + ".svg");
            p.start();
        } catch (IOException e) {
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            file.setFileFilter(filtro);
            int option = file.showOpenDialog(this);
            if (option == JFileChooser.APPROVE_OPTION) {
                name = file.getSelectedFile().getName();
                path = file.getSelectedFile().toString();
                archivo = new File(file.getSelectedFile().getAbsolutePath());
                contenido = new String(Files.readAllBytes(archivo.toPath()));
                Editor.setText(contenido);
                file_name.setText("File name: " + name);
            }
        } catch (HeadlessException | IOException e) {
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Editor;
    private javax.swing.JLabel IMG;
    private javax.swing.JTextArea consola;
    private javax.swing.JLabel error_text;
    private javax.swing.JComboBox<String> exp;
    private javax.swing.JLabel file_name;
    private javax.swing.JLabel file_name1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> tipo;
    // End of variables declaration//GEN-END:variables
}
